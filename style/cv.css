@import "./variable.css";
#cv {
  /* outline: 1px solid red; */
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  position: relative;
  h1 {
    grid-column: 1;
    text-align: center;
  }
}

.cv-left {
  display: grid;
  place-items: center;
  a {
    --custom-time: 0.5s;
    place-self: start center;
    transition: all var(--custom-time);
    width: clamp(10rem, 50%, 15rem);
    aspect-ratio: 1;
    border-radius: 50%;
    box-shadow: inset 0px 0px 5px 5px var(--color-first),
      0px 0px 10px 10px var(--color-second);
    border: none;
    padding: 2rem;
    display: grid;
    place-items: center;
    &:hover {
      cursor: pointer;
      box-shadow: inset 0px 0px 10px 10px var(--color-second),
        0px 0px 20px 20px var(--color-first);
      svg {
        fill: var(--color-first);
        g {
          stroke: var(--color-second);
        }
      }
    }
  }
  svg {
    width: 100%;
    aspect-ratio: 1;
    transition: all var(--time-1);
    scale: 1.25;
    g {
      transition: all var(--time-2);
      stroke: var(--color-first);
    }
    fill: transparent;
    width: clamp(50px, 10svw, 120px);
    z-index: 1;
  }
}

.cv-right {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: 1fr;
  grid-column: 2;
  grid-row: 1/3;
  h1 {
    text-align: center;
  }
}

form {
  /* outline: 1px solid blue; */
  display: grid;
  font-size: clamp(12px, 5svw - 1rem, 26px);
  position: relative;
  padding: 1rem 0;

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    background-color: var(--color-second);
    opacity: 0.75;
    filter: blur(5px);
    border-radius: 20px;
    z-index: -1;
  }
  input {
    font-size: inherit;
    border: none;
    background-color: transparent;
    transition: all var(--time-2);
    padding: 0 0.75rem;
  }
  textarea {
    font-size: inherit;
    resize: none;
  }
  button {
    width: 35%;
    font-size: inherit;
    border-radius: 20px;
    background-color: transparent;
    border: none;
    color: inherit;
    position: relative;
    transition: color var(--time-2);
    place-self: center;
    &::after {
      content: "";
      width: 0%;
      height: 5px;
      border-radius: 20px;
      transition: width var(--time-2);
      bottom: 0;
      left: 0%;
      background-color: var(--color-first);
      position: absolute;
    }
    &:active,
    &:hover {
      cursor: pointer;
      color: var(--color-first);
      &::after {
        width: 100%;
      }
    }
  }
}

[class*="-form"] {
  position: relative;
  padding: 1.5rem;
  input {
    padding: 0.5rem 1rem;
    outline: none;
    border-radius: 20px;
    box-shadow: 0 2px 2px 2px var(--color-first);
    color: inherit;
  }
  &:has(input:focus),
  &:has(input:user-valid) {
    outline: none;
    label {
      color: var(--color-first);
      bottom: 70%;
    }
  }
  &:has(input:user-invalid) {
    label {
      color: red;
      bottom: 70%;
    }
    input {
      outline: 2px solid red;
    }
  }

  label {
    transition: all var(--time-2);
    bottom: 28%;
    padding: 0 1.25rem;
    position: absolute;
    &:hover {
      cursor: text;
    }
  }
  &:last-of-type {
    display: grid;
    width: 100%;
    textarea {
      padding: 0.75rem 1.25rem;
      transition: all var(--time-2);
      outline: none;
      border-radius: 20px;
      height: 25svh;
      color: var(--color-white);
      background-color: transparent;
    }
    &:has(textarea:focus),
    &:has(textarea:focus-visible) {
      label {
        color: var(--color-first);
      }
      textarea {
        box-shadow: 0 0 2px 5px var(--color-first);
      }
    }
    label {
      position: static;
    }
  }
}

@media (max-width: 750px) {
  #cv {
    grid-template-columns: 1fr;
    h1 {
      grid-row: 1;
    }
  }
  .cv-right {
    grid-column: 1;
    grid-row: 3;

    label {
      bottom: 35%;
    }
  }
}
